/* Patient sidebar controls */

.sex-picker { display: inline-grid; grid-auto-flow: column; gap: 0.00025rem; align-items: center; }
.sex-option { display: inline-grid; place-items: center; width: 2.1rem; height: 2.1rem; padding: 0; border: none; background: transparent; color: #6b7280; cursor: pointer; transition: color 0.2s ease, transform 0.2s ease; --sex-stroke-width: 2.2; }
.sex-option[data-value="female"] { --sex-active-color: #ec4899; }
.sex-option[data-value="male"] { --sex-active-color: #2563eb; --sex-stroke-width: 2.8; }
.sex-option:hover { color: var(--sex-active-color); }
.sex-option.is-selected { color: var(--sex-active-color); --sex-stroke-width: 3.2; transform: translateY(-1px); }
.sex-option:focus-visible { outline: 2px solid var(--sex-active-color, #2563eb); outline-offset: 2px; border-radius: 999px; }
.sex-option .sex-icon { display: inline-grid; width: 1.6rem; height: 1.6rem; align-items: start; justify-items: start; pointer-events: none; }
.sex-option .sex-icon-svg { width: 100%; height: 100%; stroke: currentcolor; fill: none; stroke-width: var(--sex-stroke-width); stroke-linecap: round; stroke-linejoin: round; }
.sex-option .sex-icon-ring { fill: none; }
.sex-option .sex-icon-cross,
.sex-option .sex-icon-stem,
.sex-option .sex-icon-arrow { stroke: currentcolor; }
body.dark-mode .sex-option { color: #d1d5db; }
body.dark-mode .sex-option:hover,
body.dark-mode .sex-option.is-selected { color: var(--sex-active-color); }


.sidebar-demographics-item-age--inline { display: grid; grid-auto-flow: column; align-items: flex-start; column-gap: 0.5rem; }
.sidebar-demographics-item-age--inline .age-inline-wrap { display: inline-grid; grid-auto-flow: column; align-items: center; column-gap: 0.35rem; }
.age-unit-toggle-group--stacked { display: grid; grid-auto-flow: row; align-items: flex-start; row-gap: 0.2rem; }
/*
- `.sidebar-demographics-item-age--inline` keeps Age & Sex on the same line by switching the wrapper to a horizontal grid flow; apply the class to the Age container in index.html (see inline comment there).
- `.age-inline-wrap` aligns the stacked Days/Months/Years buttons beside the age input without breaking the line, while `age-unit-toggle-group--stacked` preserves the vertical stack after the wrapper shifts to a horizontal grid.
- If the toggle group still lays out horizontally, confirm no `display` overrides exist farther down this fileâ€”add `.sidebar-demographics-item-age--inline .age-unit-toggle-group { display:grid !important; }` as a fallback.
- After adding these helper classes, remove any ad-hoc width hacks (like fixed width overrides) so the new grid layout controls the spacing instead.
*/

/* .sidebar-demographics-item-age { gap: 0.75rem; align-items: center; } */
  /* To stack the Age unit buttons vertically, switch the toggle group to column layout: */
 .age-unit-toggle-group { display: grid; grid-auto-flow: row; align-items: flex-start; row-gap: 0.2rem; }

.sidebar-demographics-item-age .age-input { width: 100%; min-width: 0; justify-self: stretch; }
.age-input--compact { max-width: 6rem; }
.age-unit-toggle-group { display: grid; grid-auto-flow: row; align-items: flex-start; row-gap: 0.2rem; }

.age-unit-toggle { border: 1px solid #cbd5f5; background: #f1f5f9; 
  padding: 0.2rem 0.6rem; font-size: 0.75rem; font-weight: 600; 
  line-height: 1.2; color: #1f2937; cursor: pointer; 
  border-radius: 999px; transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease; }
.age-unit-toggle:hover { background: #e0ecff; border-color: #93c5fd; }
.age-unit-toggle.is-selected { background: #2563eb; border-color: #2563eb; color: #fff; }
.age-unit-toggle:focus-visible { outline: 2px solid #2563eb; outline-offset: 2px; }
body.dark-mode .age-unit-toggle { background: #1e293b; border-color: #334155; color: #e2e8f0; }
body.dark-mode .age-unit-toggle:hover { background: #334155; border-color: #60a5fa; color: #f8fafc; }
body.dark-mode .age-unit-toggle.is-selected { background: #3b82f6; border-color: #60a5fa; color: #f8fafc; }
body.dark-mode .age-unit-toggle:focus-visible { outline-color: #93c5fd; }
.age-unit-tooltip { pointer-events: none; font-size: 0.75rem; white-space: nowrap; }

/*
- targets Age buttons (background, border, & text color); only affects Age toggle component inside patient sidebar.
- `.is-selected` rule ensures Day/Month/Year button matches the new color scheme.
- If new colors do not appear, confirm no Tailwind button utilities (like `bg-blue-500`) are being applied dynamically; remove them or increase specificity with `.patient-sidebar-content .age-unit-toggle`.
- Update dark-mode variants below if you want the same palette in dark theme.
*/

.sidebar-demographics-item-weight { gap: 0.5rem; align-items: center; }
/*   To insert stacked kg/lbs indicator between the "Weight" label & # field, add a small column container. */
/*     Example markup + CSS combo (commented): */

/* .weight-unit-toggle-group { display: inline-grid; grid-auto-flow: column; column-gap: 0.35rem; align-items: center; justify-content: flex-end; margin-left: auto; } */
      /* To stack the kg/lbs buttons vertically in, use: */
.weight-unit-toggle-group.weight-unit-toggle-group--vertical { display: grid; grid-auto-flow: row; align-items: flex-start; row-gap: 0.35rem;}
/*
- Use the `weight-unit-toggle-group--vertical` modifier (added in index.html comment) to guarantee the kg/lbs toggle buttons stack vertically even if another rule later flips `.weight-unit-toggle-group` back to `row`.
- Setting an explicit gap keeps the stacked buttons evenly spaced & lines up with the unit stack column.
- If desktop media queries reset the base rule to `row`, copy this modifier inside the same media query so it wins when the screen is wide.
*/
.weight-unit-toggle { border: 1px solid transparent; background: transparent; font-size: 0.78rem; font-weight: 600; letter-spacing: 0.02em; 
  padding: 0.2rem 0.45rem; color: #4b5563; cursor: pointer; transition: color 0.2s ease, border-color 0.2s ease, background-color 0.2s ease; 
  border-radius: 999px; text-transform: none; }
.weight-unit-toggle:hover { color: #1f2937; border-color: #cbd5f5; background: #f1f5f9; }
.weight-unit-toggle.is-selected { color: #2563eb; border-color: #2563eb; background: rgb(37 99 235 / 12%); }
.weight-unit-toggle:focus-visible { outline: 2px solid #2563eb; outline-offset: 2px; }
body.dark-mode .weight-unit-toggle { color: #d1d5db; }
body.dark-mode .weight-unit-toggle:hover { color: #f9fafb; border-color: #334155; background: #1f2937; }
body.dark-mode .weight-unit-toggle.is-selected { color: #93c5fd; border-color: #60a5fa; background: rgb(59 130 246 / 18%); }
.weight-input { min-width: 4ch; max-width: 6ch; justify-self: start; }
.weight-summary { margin-left: auto; font-size: 0.75rem; color: #4b5563; white-space: nowrap; text-align: right; }
body.dark-mode .weight-summary { color: #cbd5f5; }
@supports (overflow: hidden) { .weight-summary { overflow: hidden; text-overflow: ellipsis; } }
