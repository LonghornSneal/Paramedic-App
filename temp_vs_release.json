{
  "content": [
    {
      "type": "text",
      "text": "Title: Visual Studio 2022 version 17.14 Release Notes | Microsoft Learn\nURL: https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes-v17.14\nContent:\n\n<div id=\"readability-page-1\" class=\"page\"><p>We're excited to announce the availability of Visual Studio 2022 v17.14. This update focuses on <strong>stability</strong> and <strong>security</strong>, along with <strong>AI improvements</strong> for all developers.</p><div id=\"tabgroup_1\" data-bi-name=\"tab-group\">\n<ul role=\"tablist\">\n<li role=\"presentation\">\n<a href=\"#tabpanel_1_allfeatures\" role=\"tab\" aria-controls=\"tabpanel_1_allfeatures\" data-tab=\"allfeatures\" tabindex=\"0\" aria-selected=\"true\" data-linktype=\"self-bookmark\" data-bi-name=\"tab\">All features</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_1_GA\" role=\"tab\" aria-controls=\"tabpanel_1_GA\" data-tab=\"GA\" tabindex=\"-1\" data-linktype=\"self-bookmark\" data-bi-name=\"tab\" aria-selected=\"false\">GA</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_1_June\" role=\"tab\" aria-controls=\"tabpanel_1_June\" data-tab=\"June\" tabindex=\"-1\" data-linktype=\"self-bookmark\" data-bi-name=\"tab\" aria-selected=\"false\">June</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_1_July\" role=\"tab\" aria-controls=\"tabpanel_1_July\" data-tab=\"July\" tabindex=\"-1\" data-linktype=\"self-bookmark\" data-bi-name=\"tab\" aria-selected=\"false\">July</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_1_August\" role=\"tab\" aria-controls=\"tabpanel_1_August\" data-tab=\"August\" tabindex=\"-1\" data-linktype=\"self-bookmark\" data-bi-name=\"tab\" aria-selected=\"false\">August</a>\n</li>\n<li role=\"presentation\">\n<a href=\"#tabpanel_1_September\" role=\"tab\" aria-controls=\"tabpanel_1_September\" data-tab=\"September\" tabindex=\"-1\" data-linktype=\"self-bookmark\" data-bi-name=\"tab\" aria-selected=\"false\">September</a>\n</li>\n</ul>\n<section id=\"tabpanel_1_allfeatures\" role=\"tabpanel\" data-tab=\"allfeatures\">\n\n<p>All the new features in the latest release.</p>\n<div data-heading-level=\"h3\"><h3 id=\"productivity\">Productivity</h3></div>\n<details>\n<summary><strong title=\"Rendering Mermaid charts in both the Markdown editor and Copilot Chat.\">Mermaid chart rendering</strong></summary>\n<blockquote>\n<p><em>Rendering Mermaid charts in both the Markdown editor and Copilot Chat.</em></p>\n<p>Visual Studio now supports rendering Mermaid charts in both the Markdown editor and Copilot Chat. This lets you visualize complex data structures, workflows, and relationships directly within your code editor. For example, you can create flowcharts and diagrams in a Markdown file using Mermaid syntax - they're automatically rendered in the preview.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mermaid.png\" alt=\"Mermaid chart rendered in Markdown editor\" data-linktype=\"relative-path\"></p>\n<p>You can also ask Copilot Chat to generate charts and diagrams to help explain complex codebases or logic with visual aids. The returned Mermaid markdown is automatically rendered in the chat window.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mermaid-copilot.png\" alt=\"Mermaid chart syntax generated by Copilot Chat\" data-linktype=\"relative-path\"></p>\n<p>Please give it a try and generate a Mermaid chart today! We would love to hear your feedback and any suggestions for improving this feature.\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"github-copilot\">GitHub Copilot</h3></div>\n<details>\n<summary><strong title=\"Copilot Agent Mode is the next evolution in AI-assisted development and has moved out of preview.\">Copilot Agent Mode</strong></summary>\n<blockquote>\n<p><em>Copilot Agent Mode is the next evolution in AI-assisted development and has moved out of preview.</em></p>\n<p>Agent Mode unlocks a new way to build with GitHub Copilot, going beyond single-turn prompts to handle entire tasks from start to finish.</p>\n<p>To get started, open Copilot Chat, click <strong>Ask</strong>, then switch to <strong>Agent</strong>.</p>\n<h5 id=\"from-idea-to-code\">From idea to code</h5>\n<p>Agent Mode understands your intent, creates a plan, pulls in the right context, and takes action. It can fix bugs, edit files, and build your solution - all from a single prompt until your goal is reached.</p>\n<p>With MCP integration, Agent Mode can also pull in rich context from your connected systems - like GitHub, CI pipelines, or monitoring dashboards - to take even smarter actions.</p>\n<p>Try it out and see what improvements it can offer!</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/agent-mode.png\" alt=\"Agent Mode\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Copilot Agent Mode is the next evolution in AI-assisted development and has moved out of preview.\">Copilot Agent Mode Improvements</strong></summary>\n<blockquote>\n<p><em>Copilot Agent Mode is the next evolution in AI-assisted development and has moved out of preview.</em></p>\n<p>Over the past few months, we've made significant updates to Agent Mode to improve reliability, responsiveness, and overall usability. Here are some of the improvements we've shipped:</p>\n<h5 id=\"performance--reliability\">Performance &amp; Reliability</h5>\n<ul>\n<li>Agent Mode now shows clearer progress indicators, so you always know what's happening behind the scenes.</li>\n<li>Improved prompt caching to speed up response times.</li>\n</ul>\n<h5 id=\"working-set--file-management\">Working Set &amp; File Management</h5>\n<ul>\n<li>The working set now stays hidden when empty, and only shows a file count when relevant.</li>\n<li>Rejected files are automatically deleted from disk and removed from the working set.</li>\n<li>Items marked with <strong>no changes</strong> are now sorted to the bottom to reduce clutter.</li>\n</ul>\n<h5 id=\"prompting--planning\">Prompting &amp; Planning</h5>\n<ul>\n<li>Updated prompt formatting improves Agent Mode performance with GPT-5 models.</li>\n<li>We're testing a new planning tool that lets the model break down complex requests into smaller, trackable steps using a live-updating markdown file. Early benchmarks (including SWE-bench) show significant gains on multi-step tasks.</li>\n</ul>\n<h5 id=\"build--tool-control\">Build &amp; Tool Control</h5>\n<ul>\n<li>You can now disable automatic builds in Agent Mode. Open the tools menu next to the chat prompt and deselect <code>run_build</code> to take manual control.</li>\n</ul>\n<h5 id=\"fixes--general-improvements\">Fixes &amp; General Improvements</h5>\n<ul>\n<li>Cancelling an Agent Mode request now works more reliably.</li>\n<li>Resolved several issues where Agent Mode could stall or hang during tool execution.</li>\n</ul>\n<hr>\n<p>We're shipping updates every sprint. If you haven't used Agent Mode in a while, now's a great time to try it again. The experience is faster, smoother, and more stable - and we're just getting started.</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"GPT-5 offers faster responses and even better performance for writing and understanding code.\">GPT-5 model support <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>GPT-5 offers faster responses and even better performance for writing and understanding code.</em></p>\n<p>We're excited to share that GPT-5 has landed in Visual Studio for everyone. It's faster and even better at helping you read, write, and refactor code. We can't wait to see what you build with it.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/gpt-5.png\" alt=\"GPT-model support5\" data-linktype=\"relative-path\"></p>\n<p>Click the Copilot badge in your IDE, open chat, and pick <strong>GPT-5 (Preview)</strong> to try it out.</p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/GPT-5-is-not-available-in-Copilot-Chat-i/10950149\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"MCP support is generally available in VS, enabling seamless connection of your entire engineering stack directly into Copilot for a more powerful development experience.\">MCP Support is generally available</strong></summary>\n<blockquote>\n<p><em>MCP support is generally available in VS, enabling seamless connection of your entire engineering stack directly into Copilot for a more powerful development experience.</em></p>\n<p>We are excited to announce that MCP support is now GA in Visual Studio! Expand the power of agent mode through rich, real-time context from your whole development stack.</p>\n<p>Model Context Protocol (MCP) is a protocol designed to seamlessly connect AI agents with a variety of external tools and services, similar to how HTTP standardized web communication. The aim is to enable any client to integrate robust tool servers such as databases, code search, and deployment systems, without writing custom connections for each tool.</p>\n<p>With our GA announcement, we are bringing a whole new set of exciting features, with even more soon on the way, to make MCP easier than ever before to access and manage server configurations.</p>\n<h5 id=\"full-authentication-specification-support-for-remote-servers-with-any-oauth-provider\">Full Authentication Specification support for remote servers (with any OAuth provider)</h5>\n<p>VS now supports the new MCP authorization specification, meaning that OAuth support is now included for any and all OAuth providers. Previously, Visual Studio supported authentication for remote servers through integration with the VS Keychain. Now, in the August release of VS, authentication with any OAuth provider is supported for remote MCP servers. Just simply select <strong>Manage Authentication</strong> for any server from the CodeLens in the .mcp.json file, and you will be redirected to a browser pop-up to easily provide your credentials for the necessary OAuth provider for that server.</p>\n<h5 id=\"easier-ways-to-add-new-mcp-servers\">Easier ways to add new MCP servers</h5>\n<p>With the GA release of MCP in VS, we're adding two new ways to add connections to new MCP servers. No more need to copy and paste JSON snippets manually into a .mcp.json file. MCP support is now truly a first-class experience in VS with these new features:</p>\n<p><strong>One-click install from the web</strong></p>\n<p>Have you ever noticed buttons in MCP server repos that say 'Install in VS Code', and wondered when support for this simple functionality would come to VS? Well your questions have been answered! Visual Studio now supports one-click server installation from the web. With this new functionality, adding new MCP servers in VS is as simple as the click of a button. Be on the lookout for <strong>Install in VS</strong> buttons to start appearing in the repos for your favorite MCP servers!\nIf you would like to add a button like this to your own MCP server repo, or you notice one missing from your favorite public server repo, you can create one using the following protocol handler template: vsweb+mcp:/install, followed by the server metadata.</p>\n<p><strong>Add server UI flow</strong></p>\n<p>We've made it easier than ever to add connections to new MCP servers with our new add flow. Whether it's a server you found online, or a custom built MCP server for your organization, you no longer need to manually copy, paste, and configure JSON to connect to new servers. To access this flow, simply click the new green plus button icon in the tool picker window in GitHub Copilot Chat.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-add-toolpicker.png\" alt=\"Add server,tool picker window\" data-linktype=\"relative-path\"></p>\n<p>Simply specify the name of the server, the input method, any arguments, or URL for HTTP servers, and seamlessly add the connection.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-add-flow.png\" alt=\"Mcp Add Flow\" data-linktype=\"relative-path\"></p>\n<h5 id=\"mcp-governance-policy-support\">MCP Governance policy support</h5>\n<p>We understand that organizations may have different policies and through a new integration with GitHub policy, enterprises and organizations can now have fine grained control over access to MCP functionality within their organizations. Your IT admin can now simply navigate to your GitHub policy settings, and toggle on or off MCP features for all users.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-governance.png\" alt=\"Mcp Governance\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"You can now connect your own language models to Visual Studio Chat, giving you more choice, control, and customization over your AI experience.\">Bring your own model to chat</strong></summary>\n<blockquote>\n<p><em>You can now connect your own language models to Visual Studio Chat, giving you more choice, control, and customization over your AI experience.</em></p>\n<p>You can now connect your own language models to Visual Studio Chat, giving you more choice, control, and customization over your AI experience.</p>\n<p>Use API keys from <strong>Anthropic</strong>, <strong>Google</strong>, or <strong>OpenAI</strong> to try the latest releases, run models that meet your security or performance needs, and switch easily between built-in and custom options.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/bring-your-own-key.png\" alt=\"Bring your own key\" data-linktype=\"relative-path\"></p>\n<p><strong>Getting started:</strong></p>\n<ol>\n<li>Open the <strong>Chat Window</strong> â†’ Select <strong>Manage Models</strong> from the model picker &gt; add your provider and key.</li>\n</ol>\n<blockquote>\n<p>Available for Chat only. Not supported for Copilot Business or Enterprise. Model capabilities vary.</p>\n</blockquote>\n<p>More providers and features are coming soon, helping you build with the AI that works best for you.</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Accept Copilot code completions word by word or line by line using shortcuts or the margin indicator for precise control.\">Accept code completions partially <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Accept Copilot code completions word by word or line by line using shortcuts or the margin indicator for precise control.</em></p>\n<p>Have you ever wanted to only accept the first couple words or lines of a Copilot code completions instead of accepting the whole thing? We are excited to announce that starting Visual Studio 17.14.13, you will be able to partially accept a completion word by word or line by line!</p>\n<p>When having a Copilot code completion in the editor.</p>\n<ul>\n<li>Use the shortcut <kbd>Ctrl</kbd>+<kbd>Right</kbd> <kbd>Arrow</kbd> to accept one word at a time,</li>\n<li>Use the shortcut <kbd>Ctrl</kbd>+<kbd>Down</kbd> <kbd>Arrow</kbd> to accept one line at a time.</li>\n</ul>\n<p>You can also use the margin indicator to accept the completion partially. When clicking on the margin indicator, it will have options for partial accepts too.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/partial-accept-menu.png\" alt=\"Gutter Menu for Code Completions\" data-linktype=\"relative-path\">\n<img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/partial-accept.gif\" alt=\"Partially accepting a code completion\" data-linktype=\"relative-path\"></p>\n<p>Now you will have more fine grained control over how much code completions you would like to accept instead of having to accept the entire suggestions and edit afterwards.</p>\n<p>Note: Partial accept overrides the existing functionality that bind to these shortcuts. If you would like to turn it off, please go to <strong>Tools â†’ Options â†’ IntelliCode â†’ Advanced â†’ Whole-line completions</strong>.</p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Ability-to-partially-accept-GitHub-Copil/10906088?q=partial+accept\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Hide Next Edit Suggestions automatically and only review it when you interact with it.\">Hiding Next Edit Suggestions by default</strong></summary>\n<blockquote>\n<p><em>Hide Next Edit Suggestions automatically and only review it when you interact with it.</em></p>\n<p>Want to be focused when coding and not seeing next edit suggestions (NES) popping up automatically? We hear you that sometimes Copilot suggestions can be a bit distracting when appearing unexpectedly, and now in Visual Studio you can hide NES by default and only review them when you want to.</p>\n<p>NES will still be triggered based on your edits and when there is an available NES ready for you to review, a <strong>margin indicator</strong> will pop up in the gutter space, pointing at the line that it has a suggestion for. To view this suggestion, you can either:</p>\n<ol>\n<li>Click the margin indicator or</li>\n<li>Press <code>Tab</code> key</li>\n</ol>\n<p>and the suggestion will be displayed. Then, after viewing the suggestions, you can press <code>Tab</code> again to accept it or press <code>ESC</code> to dismiss it. After you accept a suggestion, any related suggestions will automatically appear again, as you might find them useful too. Any other new suggestions that are not related to your previously accepted suggestion will be hidden again.</p>\n<p>For example, in the video below, after changing <code>Point</code> to <code>Point3D</code>, a NES is available but not displayed directly. The margin indicator and hint bar shows that there is a suggestion on line 4 and then I clicked on the indicator to review it.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nescollapsemode.gif\" alt=\"Hiding Next Edit Suggestions\" data-linktype=\"relative-path\"></p>\n<p>To try out this experience, go to <strong>Tools â†’ Options â†’ GitHub â†’ Copilot â†’ Copilot Completions</strong> and check <strong>Collapse Next Edit Suggestions</strong>.</p>\n<p>You can also configure it via the shortcut provided by the context menu in the margin indicator. Whenever there is a code suggestion ready for you in the Editor (no matter it's from Copilot or IntelliCode), a margin indicator will pop up and point at the corresponding line. When clicking on the indicator, a context menu will appear, giving you multiple ways to interact with the code suggestion:</p>\n<ul>\n<li>Accept (click <strong>Accept</strong> or press <code>Tab</code>)</li>\n<li>Dismiss (click <strong>Dismiss</strong> or press <code>ESC</code>)</li>\n<li>Settings: You can open the GitHub Copilot Completions settings page directly from here.</li>\n</ul>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/contextmenu.png\" alt=\"Gutter Menu\" data-linktype=\"relative-path\"></p>\n<p>Please let us know in Developer Community if you have any feedback!</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"You can now sign up to use Copilot with your existing Google account!\">Sign up for Copilot with your Google account</strong></summary>\n<blockquote>\n<p><em>You can now sign up to use Copilot with your existing Google account!</em></p>\n<p>New to Copilot? You can now sign up for Copilot using your Google account!</p>\n<p>GitHub now supports social login with Google, and you can link your new account right from Visual Studio.</p>\n<p>Click the <strong>Sign up with Google</strong> button from the Copilot Chat window to streamline your Copilot set up with your Google account!</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/copilot-google-sign-up.png\" alt=\"Copilot Chat window\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"New Models just dropped in Visual Studio Chat.\">Gemini 2.5 Pro and GPT-4.1</strong></summary>\n<blockquote>\n<p><em>New Models just dropped in Visual Studio Chat.</em></p>\n<p>More power, speed, and flexibility â€” all within your IDE!</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/new-models.png\" alt=\"New Models\" data-linktype=\"relative-path\"></p>\n<h5 id=\"-gemini-25-pro-is-now-in-visual-studio\">ðŸš¨ Gemini 2.5 Pro is now in Visual Studio</h5>\n<p>Gemini 2.5 Pro, widely regarded as one of the top-performing models available, is now supported in Visual Studio. It joins GPT-4.1, GPT-4o, Claude Sonnet 3.7, Claude Sonnet 3.5, and o3 mini to bring a truly versatile multi-model AI experience to your IDE.</p>\n<h5 id=\"-gpt-41-is-now-the-default\">ðŸš¨ GPT-4.1 is now the default</h5>\n<p>GPT-4.1 is now the default model in Visual Studio, offering a faster, more responsive, and noticeably smoother experience across the board.</p>\n<hr>\n<p>You can now select the best model for the task, code, and workflow at hand. Try them out and let us know what you think!</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Claude Sonnet 4 and Claude Opus 4 are now generally available in Visual Studio, offering enhanced AI capabilities.\">Claude Sonnet 4 and Claude Opus 4</strong></summary>\n<blockquote>\n<p><em>Claude Sonnet 4 and Claude Opus 4 are now generally available in Visual Studio, offering enhanced AI capabilities.</em></p>\n<p>We're excited to announce that Claude Sonnet 4 and Claude Opus 4 are now generally available to all Visual Studio customers!</p>\n<ul>\n<li>Use Claude Sonnet 4 in <em>Agent Mode</em> for faster, more focused interactions.</li>\n<li>Try both Claude Sonnet 4 and Opus 4 in <em>Ask Mode</em> for deeper reasoning.</li>\n</ul>\n<p>To get started, open Chat in Visual Studio, select the model picker, and choose the Claude model that fits your workflow.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/claude_four.png\" alt=\"New Model\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Connect Visual Studio to AI agents using the new Model Context Protocol (MCP) â€” a standardized way to share context, access data, and drive intelligent features.\">MCP server support</strong></summary>\n<blockquote>\n<p><em>Connect Visual Studio to AI agents using the new Model Context Protocol (MCP) â€” a standardized way to share context, access data, and drive intelligent features.</em></p>\n<p>Visual Studio now supports MCP servers, unlocking smarter and more connected AI development. MCP is an open protocol that standardizes how apps and AI agents share context and take action.</p>\n<p>With MCP in Visual Studio, you can do more than just retrieve information from your MCP servers, such as logs, test failures, PRs, or issues. You can also use that information to drive <strong>meaningful actions</strong> in your code, your IDE, and even your connected systems across your stack.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-support.png\" alt=\"MCP server support\" data-linktype=\"relative-path\"></p>\n<h5 id=\"set-up-your-mcp-server\">Set Up Your MCP Server</h5>\n<p>Add an <code>mcp.json</code> file to your solution, and Visual Studio will detect it automatically. It also recognizes configs from other environments like <code>.vscode/mcp.json</code>.</p>\n<h5 id=\"use-your-mcp-servers\">Use Your MCP Servers</h5>\n<p>Open the <strong>Tools</strong> dropdown in the Copilot Chat panel to view connected MCP servers. From there, Copilot can pull in context and take action using your existing systems.</p>\n<p><strong>Note:</strong> You will need to be in <em>Agent Mode</em> to access and interact with MCP servers.</p>\n<hr>\n<p>Bring the full power of your stack into Copilot without leaving Visual Studio!</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Enhanced MCP server integration in Visual Studio enables seamless connection of your entire engineering stack directly into Copilot for a more powerful development experience.\">MCP Server July Update</strong></summary>\n<blockquote>\n<p><em>Enhanced MCP server integration in Visual Studio enables seamless connection of your entire engineering stack directly into Copilot for a more powerful development experience.</em></p>\n<p>We've made significant improvements to MCP server integration in Visual Studio to help you unlock a more powerful, connected engineering stack.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-tool-config.png\" alt=\"MCP server support improved\" data-linktype=\"relative-path\"></p>\n<h5 id=\"set-up-your-mcp-server-1\">Set Up Your MCP Server</h5>\n<p>Add an <code>mcp.json</code> file to your solution â€” Visual Studio will detect it automatically (we also support <code>.vscode/mcp.json</code>). Start and manage servers directly with CodeLens controls at the top of each server block. Easily restart, run, and control inputs from within the editor.</p>\n<p>With seamless authentication via keychain support, you can now authenticate with supported MCP servers directly in Visual Studio using your existing keychain credentials â€” no additional configuration needed.</p>\n<h5 id=\"use-your-mcp-servers-1\">Use Your MCP Servers</h5>\n<p>Open the <strong>Tools</strong> dropdown in the Copilot Chat panel to view connected MCP servers and manage them by selecting the arrow to reveal the new menu. From there, you can manage server inputs in our new modal dialog. Copilot can then pull in context and take action using your existing systems.</p>\n<p><strong>Note:</strong> You will need to be in <em>Agent Mode</em> to access and interact with MCP servers.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-configuration.png\" alt=\"MCP\" data-linktype=\"relative-path\"></p>\n<h5 id=\"visual-studio-now-supports-the-new-authentication-protocol-for-mcp-servers\">Visual Studio now supports the new Authentication protocol for MCP servers</h5>\n<p>With seamless authentication via keychain support, you can now authenticate with supported remote MCP servers directly in Visual Studio using your existing keychain credentials â€” no additional configuration needed. This is currently supported for GitHub and Entra ID accounts, with support for additional OAuth providers coming in a later update.</p>\n<h5 id=\"codelens-support-for-mcp-servers\">Codelens support for MCP servers</h5>\n<p>Visual Studio now supports CodeLens for MCP servers, allowing you to start and manage servers inputs and authentication directly from the editor. This makes it easier to control your development environment without leaving your code.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-codelens.png\" alt=\"MCP Codelens support\" data-linktype=\"relative-path\"></p>\n<hr>\n<p>Bring the full power of your stack into Copilot without leaving Visual Studio!</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Visual Studio now supports MCP prompts, resources, and sampling to enhance your Copilot experience by connecting to your engineering stack.\">MCP Prompts, Resources, and Sampling</strong></summary>\n<blockquote>\n<p><em>Visual Studio now supports MCP prompts, resources, and sampling to enhance your Copilot experience by connecting to your engineering stack.</em></p>\n<p>We are excited to announce that Visual Studio now supports MCP prompts, resources, and sampling to enhance your Copilot experience by bringing in more context from your engineering stack.</p>\n<h5 id=\"mcp-prompts-and-prompt-templates\">MCP Prompts and Prompt Templates</h5>\n<p>The Model Context Protocol provides a standardized way for servers to expose prompt templates to clients. MCP Prompts allow servers to provide structured messages and instructions for interacting with language models that are catered to the use case and content of the server in question, guaranteeing that you will get the best responses for a certain task. Visual Studio now allows you to discover available prompts, retrieve their contents, and provide arguments to customize them.</p>\n<p>To reference any prompts that may come from an MCP server, you can locate them using the <strong>+ Reference</strong> button in chat, and then selecting the <strong>Prompts</strong> option, and then selecting <strong>MCP prompts</strong> from the flyout.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-prompttemplates.png\" alt=\"Mcp Prompttemplates\" data-linktype=\"relative-path\"></p>\n<p>From there, you will be presented with a modal dialog that allows you to select the prompt you would like to use. You can then click, <strong>Insert Prompt</strong> to include the text from this prompt in chat.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-prompts-menu.png\" alt=\"Mcp Prompts Menu\" data-linktype=\"relative-path\"></p>\n<p>Some MCP prompts will have arguments that you can fill in to customize the prompt for your specific needs. These are known as prompt templates. If you select a prompt in the modal dialog that contains arguments, you will be able to specify those values before you insert the prompt into chat.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-prompt-templates.png\" alt=\"Mcp Prompt Templates\" data-linktype=\"relative-path\"></p>\n<h5 id=\"mcp-resources-and-resource-templates\">MCP Resources and Resource Templates</h5>\n<p>Model Context Protocol (MCP) also provides a standardized way for servers to expose resources to clients. Resources allow servers to share data that provides context to language models, such as files, database schemas, or application-specific information. Each resource is uniquely identified by a URI. This allows you to get even more out of your MCP servers, and pull in context that is related to them directly in the IDE.</p>\n<p>To use any MCP resources that might be available to you, you can reference them in Copilot chat in the same way you would reference any other piece of context, such as a file: with a hashtag (#) followed by the resource URI.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-resources.png\" alt=\"Mcp Resources\" data-linktype=\"relative-path\"></p>\n<p>Just like with prompts, MCP resources can also have arguments that you can fill in to customize the resource for your specific needs. These are known as resource templates. If a server in question has resource templates that you would like to take advantage of, you can configure them using the <strong>+ Reference</strong> button in chat, and then selecting the new <strong>MCP resource</strong> option from the menu.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-resourcetemplates-1.png\" alt=\"Mcp Resourcetemplates 1\" data-linktype=\"relative-path\"></p>\n<p>From there, you will be presented with a modal dialog that allows you to select the resource template you would like to use, and fill in any arguments that it might have. Once you are done, you can click <strong>Add Resource</strong> to make this MCP resource referenceable in chat just like any other MCP resource, as described above.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/mcp-resourcetemplates-2.png\" alt=\"Mcp Resourcetemplates 2\" data-linktype=\"relative-path\"></p>\n<h5 id=\"mcp-sampling\">MCP Sampling</h5>\n<p>Sampling in MCP allows servers to implement agentic behaviors, by enabling LLM calls to occur nested inside other MCP server features. This feature in the Model Context Protocol spec allows an MCP server to make a request of an LLM, rather than the typical workflow of an LLM requesting content or information from an MCP server. Visual Studio now supports just that, and allows your MCP servers to go a level deeper to perform more complex tasks on your behalf (all with your permission, of course!).</p>\n<p>There is nothing to configure to take advantage of sampling, as long as your MCP server supports it, Visual Studio will too. If Copilot determines that a request that you send would benefit from a sampling call, you will first see a dialog, containing all details of the request, and asking you to confirm the sampling call before anything happens behind the scenes.</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"You can now reference the Output Window as context in Copilot Chat.\">Copilot output window context</strong></summary>\n<blockquote>\n<p><em>You can now reference the Output Window as context in Copilot Chat.</em></p>\n<p>We know the Output Window is essential for tracking builds, debugging, and understanding what is going on under the hood. Now, Copilot can read that information - so you can ask questions, get help, and take action based on your output logs.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/output-window.png\" alt=\"Output Window\" data-linktype=\"relative-path\"></p>\n<h5 id=\"how-to-use-it\">How to Use It</h5>\n<ul>\n<li>Use <code>#output</code> to reference it directly in chat.</li>\n<li>Click the âž• icon in the chat input to add it as context.</li>\n<li>Ask Copilot directly: <em>Check my output logs and help me fix this error.</em></li>\n<li>Or right-click in the <strong>Output Window</strong> and choose <strong>Explain with Copilot</strong> to attach it instantly.</li>\n</ul>\n<p>Try it out and see how much easier it is to read and act on your logs!</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Only receive code suggestions when you explicitly request them in Visual Studio.\">Copilot suggestions on demand <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Only receive code suggestions when you explicitly request them in Visual Studio.</em></p>\n<p>Want to be more in control of code suggestions that pop up in your editor? Now in Visual Studio, you can opt out of automatic code suggestions and only receive suggestions when you explicitly request them.</p>\n<p>You can configure the trigger for code suggestions in <strong>Tools â†’ Options â†’ IntelliCode â†’ General</strong>. The default experience is <strong>Automatically generate code completions in the Editor</strong> and you can uncheck this setting to only receive suggestions when you explicitly request them by pressing <kbd>Alt</kbd>+<kbd>,</kbd> or <kbd>Alt</kbd>+<kbd>.</kbd>. If there are multiple code suggestions available after requesting, you can cycle through them by pressing <kbd>Alt</kbd>+<kbd>,</kbd> and <kbd>Alt</kbd>+<kbd>.</kbd> as well.</p>\n<p>When triggered, a thinking hint bar will appear at your cursor position to indicate that Copilot is generating code suggestions. If no suggestions returned, the hint bar will disappear after a few seconds. If suggestions are available, you can accept them by pressing <code>Tab</code>.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/completions-on-demand.gif\" alt=\"Code Completions Manually Triggered\" data-linktype=\"relative-path\"></p>\n<p>Now, you can better customize your code suggestion experience in Visual Studio with this new setting. For example, when you want to be focused with minimum distraction, you can uncheck this setting and change it back when you want to receive more suggestions effortlessly. Please share any feedback with us, and let us know any other ways you want to customize your Copilot code suggestions experience!</p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Copilot-completions-are-too-intrusive/10810929#T-ND10921637\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"You can now track your Copilot usage directly in Visual Studio.\">See your Copilot usage</strong></summary>\n<blockquote>\n<p><em>You can now track your Copilot usage directly in Visual Studio.</em></p>\n<p>Want to know how much you've used Copilot this month? Visual Studio now includes a <strong>Copilot Consumptions</strong> panel to easily track your usage!</p>\n<p>Whether you're using Copilot Free or a paid plan, you can check your number of chat requests and code completions right from the IDE.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/copilot-billing.png\" alt=\"Usage Status\" data-linktype=\"relative-path\"></p>\n<p>Access it by clicking the <strong>Copilot badge</strong> in the top-right corner of your IDE and selecting <strong>Copilot Consumptions</strong>.</p>\n<p>This opens a panel showing your current usage for the month.</p>\n<blockquote>\n<p>Tip: If you're using premium models, you'll also see usage multipliers listed in the model picker, so you always know exactly what you're using.</p>\n</blockquote>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"You can now create reusable prompt files in your repository to quickly run or share your frequently used prompts.\">Save or share your prompts</strong></summary>\n<blockquote>\n<p><em>You can now create reusable prompt files in your repository to quickly run or share your frequently used prompts.</em></p>\n<p>Writing effective prompts can be time-consuming, but it's the key to getting the most out of Copilot Ask and Agent mode. We've enabled reusable prompt files so you can leverage great prompts again and again. From there, you can run them quickly from the chat window or share them with your team.</p>\n<h5 id=\"how-to-write-prompt-files\">How to write prompt files</h5>\n<ol>\n<li>Write your prompts the way you normally would in the prompt box, attaching # references to add specific information from your solution like methods, classes, and files. You can even reference other prompt files to include common base instructions.</li>\n<li>Copy it from the prompt box into a markdown file, and save it with the .prompt.md file extension in the root of your repository in the <code>.github/prompts</code> folder.</li>\n</ol>\n<p>Tip: You can even get Copilot's help refining your prompt to be more specific.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/17.14.6_prompt_files.png\" alt=\"Attaching a prompt file to your prompt\" data-linktype=\"relative-path\"></p>\n<h5 id=\"how-to-run-your-prompts\">How to run your prompts</h5>\n<ol>\n<li>Start typing <code>#prompt:</code> to reference all the prompt files from your <code>.github/prompts</code> folder directly in chat or click the âž• icon in the chat input to add it as context.</li>\n<li>Add any additional information in the prompt box or just send the prompt!</li>\n</ol>\n<p>Give it a try and speed up your AI workflows!</p>\n<p>ðŸ“£ <em>Take <a href=\"https://aka.ms/VSPromptFiles\" data-linktype=\"external\">this survey</a> to help make the feature even better.</em></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"GitHub Copilot Walkthroughs are now available in Visual Studio to help you get up and running quickly. Walkthroughs guide you through using key Copilot features directly in your editor.\">GitHub Copilot Walkthrough</strong></summary>\n<blockquote>\n<p><em>GitHub Copilot Walkthroughs are now available in Visual Studio to help you get up and running quickly. Walkthroughs guide you through using key Copilot features directly in your editor.</em></p>\n<p>We're excited to introduce the GitHub Copilot Walkthrough in Visual Studio! The walkthrough is an interactive guide built right into your editor, helping you explore GitHub Copilot's capabilities step by step. Whether you're new to GitHub Copilot or want to learn about its latest features, the walkthrough makes it easier than ever to get started.</p>\n<h5 id=\"getting-started-with-walkthroughs\">Getting started with walkthroughs</h5>\n<p>Launch Copilot Walkthroughs from Visual Studio by going to <strong>Copilot button (upper right) â†’ GitHub Copilot Walkthrough</strong>.</p>\n<p>You'll see guided activities that introduce different parts of the Copilot experience, such as:</p>\n<ul>\n<li>Writing prompts in Chat</li>\n<li>Using inline code completions</li>\n<li>Accepting, editing, or rejecting Copilot suggestions</li>\n<li>Exploring and learning about new features like Copilot Edits</li>\n</ul>\n<p>The walkthrough is a great way to get a high-level understanding of what Copilot can do before diving deeper into documentation and hands-on usage.</p>\n<h5 id=\"how-to-access-walkthroughs\">How to access walkthroughs</h5>\n<p>The GitHub Copilot walkthrough opens automatically the first time you sign into GitHub Copilot, making it super easy to get started. To revisit it later, go to <strong>GitHub Copilot â†’ GitHub Copilot Walkthrough</strong> in Visual Studio.</p>\n<p>Whether you're exploring GitHub Copilot for the first time or just need a quick refresher, this walkthrough is your friendly guide to unlocking the full potential of Copilot. Dive in and start creating with confidence!</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/walkthroughsvideo.gif\" alt=\"Walkthrough\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"We have added new updates to Copilot code completions for C++ in Visual Studio to provide more accurate code suggestions.\">Improvements to C++ code completions</strong></summary>\n<blockquote>\n<p><em>We have added new updates to Copilot code completions for C++ in Visual Studio to provide more accurate code suggestions.</em></p>\n<p>We have been working to improve the quality of C++ GitHub Copilot completions.</p>\n<p>Now, Copilot can detect even more relevant context in C++ projects in order to provide more accurate code suggestions in Visual Studio for your specific codebase.</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Context improvements help you find the correct code to reference or update, boosting your everyday tasks with Copilot.\">Better semantic code search for Copilot</strong></summary>\n<blockquote>\n<p><em>Context improvements help you find the correct code to reference or update, boosting your everyday tasks with Copilot.</em></p>\n<p>Copilot Chat keeps getting smarter with improved context for your everyday tasks. You can expect better overall responses since the core code search capabilities have been enhanced to provide more relevant results. Now, Copilot is even better at retrieving the right code snippets related to behaviors, concepts, or functionality described in natural language. These improvements are thanks to leveraging remote indexes of your codebases.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/18.0_semantic_search.png\" alt=\"Semantic code search\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Introducing the GPT-4o Copilot code completion model to bring you higher quality completions.\">GPT-4o code completion model <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Introducing the GPT-4o Copilot code completion model to bring you higher quality completions.</em></p>\n<p>We are thrilled to announce that the new GPT-4o Copilot code completion model is now available in Visual Studio 17.14 for GitHub Copilot users! This advanced model, based on GPT-4o mini, has been further trained on over 275,000 high-quality public repositories across more than 30 popular programming languages. As a result, developers can look forward to more accurate suggestions and enhanced performance.</p>\n<p>GPT-4o Copilot access notes:</p>\n<ul>\n<li><strong>Copilot Pro, Business, or Enterprise users</strong>: The new model is available for you now in 17.14 and later.</li>\n<li><strong>Copilot Free users</strong>: Using this model will count toward your 2,000 free monthly completions.</li>\n</ul>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/GitHub-Copilot-Lags-Behind-GPT-4o-in-Dev/10725256\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"Automatically generate doc comments for C++ and C# functions.\">AI doc comment generation <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Automatically generate doc comments for C++ and C# functions.</em></p>\n<p>Copilot is now seamlessly integrated into Visual Studio's code editor to significantly boost your productivity by generating doc comments for your functions.</p>\n<p>With automatic doc comment generation enabled for your project, simply type the comment pattern according to your settings (for example, <code>///</code>) and Copilot will instantly complete the function description based on the function's content. This feature saves you time and lets you focus more on coding and less on documentation.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/ai-doc-comments-2.gif\" alt=\"AI doc comments\" data-linktype=\"relative-path\"></p>\n<p>This feature is available for both C++ and C# project files, making your coding experience smoother and more efficient.</p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Copilot-AI-comment-generation-on-method/10744262\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"NES leverages the previous edits made and predicts the next edit to come, whether it's an insertion, deletion, or mix of both.\">Next Edit Suggestion</strong></summary>\n<blockquote>\n<p><em>NES leverages the previous edits made and predicts the next edit to come, whether it's an insertion, deletion, or mix of both.</em></p>\n<p>We are excited to announce Next Edit Suggestions, or NES for short, is now available in Visual Studio to further improve your coding experience. NES leverages the previous edits made and predicts the next edit to come, whether it's an insertion, deletion, or mix of both. Unlike Completions which is limited to generate suggestions at your caret location, NES can support you anywhere in your file, where the next edit is most likely to occur. NES augments the existing Copilot Completions experience by supporting developers' code editing activities.</p>\n<h5 id=\"getting-started-with-nes\">Getting Started with NES</h5>\n<p>Enable NES via <strong>Tools â†’ Options â†’ GitHub â†’ Copilot â†’ Copilot Completions â†’ Enable Next Edit Suggestions.</strong></p>\n<p>Like completions, all you need to do to get NES is to start coding!</p>\n<p>When you're presented with an edit suggestion, if it is on a different line than the one you are on now, it will suggest you <strong>Tab to Navigate to the corresponding line</strong> first. You won't need to manually search for related edits anymore; NES will lead the way!</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nes-tab-jump.png\" alt=\"NES Tab to Jump Hint Bar\" data-linktype=\"relative-path\"></p>\n<p>After you are on the same line as the edit, you can <strong>Tab to Accept</strong> the suggestion.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nes-tab-accept.png\" alt=\"NES Tab to Accept Hint Bar\" data-linktype=\"relative-path\"></p>\n<p>Note: You can turn on/off the hint bars by going to <strong>Tools â†’ Options â†’ IntelliCode â†’ Advanced â†’ Hide the tip shown with gray text</strong>.</p>\n<p>In addition to the hint bars, an arrow in the gutter also pops up to indicate that there is an edit suggestion available. You can click on the arrow to explore the edit suggestion menu.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nes-gutter-arrow.png\" alt=\"NES Gutter Arrow\" data-linktype=\"relative-path\"></p>\n<h5 id=\"example-scenarios\">Example Scenarios</h5>\n<p>Next edit suggestions can be helpful in a variety of scenarios, not only making obvious repetitive changes but also logical changes. Here are some examples:</p>\n<p><strong>Refactoring a 2D Point class to 3D Point:</strong></p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nes-point.gif\" alt=\"NES Refactoring Point Class\" data-linktype=\"relative-path\"></p>\n<p><strong>Updating code syntax to modern C++ using STL:</strong></p>\n<p>Note that NES is not just making repetitive changes like updating all <code>printf()</code> to <code>std::cout</code>, but also updating other syntax such as <code>fgets()</code>.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nes-migration.gif\" alt=\"NES Updating C++ Syntax\" data-linktype=\"relative-path\"></p>\n<p><strong>Making logical changes in response to a newly added variable:</strong></p>\n<p>NES responds quickly to the new variable, which adds a maximum number of guesses a player can make in a game, and Copilot Completions also jumps in to help.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nes-addvariable.gif\" alt=\"NES Add New Variable\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"You can now let Copilot adjust your pasted code to fit the context of your existing code.\">Adaptive paste</strong></summary>\n<blockquote>\n<p><em>You can now let Copilot adjust your pasted code to fit the context of your existing code.</em></p>\n<p>When you're pasting code into Visual Studio, there are often additional steps required to make it work seamlessly. Parameters may need to be adjusted to match those already used in your solution, or the syntax and styling may not align with the rest of your document.</p>\n<p>Adaptive paste is here to save you time and reduce effort by automatically adjusting the pasted code to fit the context of your existing code, minimizing the need for manual modifications. This feature also supports scenarios such as minor error fixes, code styling, formatting, human and code language translation, and fill-in-the-blank or continue-the-pattern tasks.</p>\n<p>For instance, if you have a <code>Math</code> class that implements the <code>IMath</code> interface, copying and pasting the implementation for the <code>Ceiling</code> method into the same file will adapt it to implement the not-yet-implemented interface member <code>Floor</code>.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/adaptive-paste-complete-interface.gif\" alt=\"Adapt pasted method to complete the interface\" data-linktype=\"relative-path\"></p>\n<p>The Adaptive Paste UI appears when you perform a regular paste {KeyboardShortcut:Edit.Paste}. Press <code>Tab</code> to request a suggestion, and you'll be shown a diff comparing the original pasted code with the adjusted code.</p>\n<p>Try it out today by enabling <strong>Tools â†’ Options â†’ GitHub â†’ Copilot â†’ Editor â†’ Enable Adaptive Paste</strong>.</p>\n</blockquote>\n\n<br>\n</details>\n<details>\n<summary><strong title=\"You can now let Copilot fully implement your empty C# method.\">Implement with Copilot</strong></summary>\n<blockquote>\n<p><em>You can now let Copilot fully implement your empty C# method.</em></p>\n<p>Today, if you're referencing a method in your C# code that hasn't been implemented yet, you can use a common lightbulb refactoring called <strong>Generate Method</strong> to immediately create that method in a class. However, this refactoring only creates a method with the correct signature but an empty skeleton and <code>throw new NotImplementedException</code> line otherwise. This means that while the method technically exists and you have to do less work to create it, you'll still need to implement the method yourself, which can take more time.</p>\n<p>The <strong>Implement with Copilot</strong> refactoring aims to make you even more productive in this scenario by allowing you to automatically implement or <em>add the meat</em> to your method with the help of GitHub Copilot. When an empty method only containing a <kbd>NotImplementedException</kbd> throw is encountered, you can select the lightbulb (<kbd>CTRL</kbd>+<kbd>.</kbd>) on that <code>throw</code> line and select the <strong>Implement with Copilot</strong> refactoring and Copilot will fill out all the contents of your method based on your existing codebase, method name, etc.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/implement-with-copilot.gif\" alt=\"Implement with Copilot\" data-linktype=\"relative-path\"></p>\n</blockquote>\n\n<br>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"debugging--diagnostics\">Debugging &amp; diagnostics</h3></div>\n<details>\n<summary><strong title=\"Accelerate Performance Tuning with the New Benchmark project Template and Built-In Profiling support.\">Profiler Copilot Agent</strong></summary>\n<blockquote>\n<p><em>Accelerate Performance Tuning with the New Benchmark project Template and Built-In Profiling support.</em></p>\n<p>We are excited to introduce the Profiler Agent in Visual Studio: a first-of-its-kind AI assistant that helps you understand and fix performance issues without needing to be a profiling expert.</p>\n<p>The Profiler Agent works alongside GitHub Copilot to:</p>\n<ul>\n<li>Analyze CPU usage, memory allocations, and runtime behavior</li>\n<li>Surface performance bottlenecks</li>\n<li>Generate <a href=\"https://benchmarkdotnet.org/articles/features/vsprofiler.html\" data-linktype=\"external\">BenchmarkDotNet Benchmarks</a> or optimized existing Benchmarks</li>\n<li>Apply suggested optimizations</li>\n<li>Validate improvements all in a guided loop</li>\n</ul>\n<p>Getting started is simple. Just ask your question in Copilot Chat (Agent Mode):</p>\n<ul>\n<li><p>Option 1: Tag <span dir=\"ltr\" lang=\"en-us\">@profiler</span></p>\n<ul>\n<li>Example: <span dir=\"ltr\" lang=\"en-us\">@profiler</span> Why is my app slow?</li>\n</ul>\n</li>\n<li><p>Option 2: Ask your question directly without tagging</p>\n<ul>\n<li><p>Example: Why is my frame rate dropping?</p>\n<p>(Make sure the Profiler Agent is enabled from the Select Tools menu in Copilot Chat for this option.)</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/profiler-agent.gif\" alt=\"Profiler Copilot Agent\" data-linktype=\"relative-path\"></p>\n<p>Whether you're new to profiling or a pro, the agentic experience puts powerful, AI-driven diagnostics at your fingertips.\nNo deep knowledge required just real, actionable insights.</p>\n<p>Currently supports high CPU usage analysis and .NET object allocations with more scenarios coming soon.\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"New Mono debug engine for .NET MAUI integrated into the Visual Studio Core debugger.\">New debugger for .NET MAUI apps</strong></summary>\n<blockquote>\n<p><em>New Mono debug engine for .NET MAUI integrated into the Visual Studio Core debugger.</em></p>\n<p>The new Mono debugger for .NET MAUI apps is an advanced debug engine integrated into the Visual Studio debugger. It offers significant improvements in reliability, performance, and feature parity with the rest of Visual Studio.</p>\n<p>Notable enhancements include <em>Just My Code</em>, <em>variables</em>, and <em>expression evaluation</em>.</p>\n<p>To use this feature, ensure you have enabled the following Visual Studio Preview option: <strong>Enable new .NET Mono debugger for MAUI apps</strong>.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/icordebug-maui.png\" alt=\"New debugger for .NET MAUI apps\" data-linktype=\"relative-path\"></p>\n<p><em>Currently, this feature is only available for the Android platform. iOS support is coming soon.</em>\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Enhanced LINQ expression debugging experience with clause hovering datatip.\">Show datatips for LINQ Expressions <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Enhanced LINQ expression debugging experience with clause hovering datatip.</em></p>\n<p>Generating and troubleshooting LINQ queries can be a tedious and intricate process, often requiring precise syntax knowledge and numerous iterations. To alleviate these challenges, Visual Studio 2022 now features a LINQ on-hover DataTip in its debugger.</p>\n<p>While you are in a break state during debugging, you can hover over individual clauses or segments of your LINQ query to evaluate the immediate query value at runtime.</p>\n<p>Additionally, you can click the GitHub Copilot icon at the end of the DataTip to perform an <em>Analyze with Copilot</em> on the specific query clause you hovered over. Copilot will then explain the clause's syntax and clarify why you are getting the specified result.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/linq-hover-example.png\" alt=\"LINQ Hover datatip example\" data-linktype=\"relative-path\"></p>\n<p>This feature can significantly improve efficiency and make your debugging experience smoother and easier, helping you pinpoint issues with LINQ queries faster and streamline your overall development workflow.</p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Integrated-Linq-Editor/442398\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"The .NET Allocation Tool now identifies zero-length array allocations, helping optimize memory usage and performance.\">Zero-Length Array Allocation Insights</strong></summary>\n<blockquote>\n<p><em>The .NET Allocation Tool now identifies zero-length array allocations, helping optimize memory usage and performance.</em></p>\n<p>The .NET Allocation Tool now provides detailed insights into zero-length array allocations, helping you identify and optimize unnecessary memory usage. While these allocations may seem insignificant individually, they can accumulate quickly and impact performance, especially in high-performance or memory-constrained applications.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/zero-length-array-allocations.gif\" alt=\"Native Instrumentation Tool\" data-linktype=\"relative-path\"></p>\n<p>With this update, you can investigate zero-length array allocations by clicking the Investigate link, which opens the Allocation View displaying allocation details. Double-clicking reveals code paths where these allocations occur, enabling precise optimizations. To improve efficiency, consider using <code>Array.Empty&lt;T&gt;()</code>, a statically allocated empty array instance, to eliminate redundant memory allocations.\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"git-tooling\">Git tooling</h3></div>\n<details>\n<summary><strong title=\"Get better GitHub Copilot-powered suggestions for your code changes to help you catch potential issues early and improve your code quality.\">Better code reviews AI <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Get better GitHub Copilot-powered suggestions for your code changes to help you catch potential issues early and improve your code quality.</em></p>\n<p>Now, with the latest model updates, you can get even better code review comments on your local changes before you even commit!</p>\n<h5 id=\"same-ux-with-key-improvements\">Same UX with key improvements</h5>\n<ol>\n<li><p><strong>Enhanced Comment Quality</strong> - newer reasoning models mean more insightful and precise code reviews, catching subtle bugs and performance issues that might be overlooked by traditional methods.</p>\n</li>\n<li><p><strong>Optimized Comment Generation</strong> - by generating comments for the entire change set at once, rather than file-by-file, you get improved performance and a more comprehensive review.</p>\n</li>\n<li><p><strong>Updated Prompting Techniques</strong> - clearer and more direct prompt ensures more accurate and relevant feedback.</p>\n</li>\n</ol>\n<h5 id=\"get-started\">Get started</h5>\n<p>With your Copilot subscription enabled in Visual Studio and the following feature flags enabled, you can see the new sparkle comment button in the Git Changes window. When clicked, Copilot will examine your sets of changes and propose some suggestions inline in your editor.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/17.14_local_code_review_icon.png\" alt=\"17.14 Local Code Review Button\" data-linktype=\"relative-path\"></p>\n<p>Ensure you have both of the following feature flags turned on:</p>\n<ul>\n<li><strong>Tools</strong> â†’ <strong>Options</strong> â†’ <strong>Preview Features</strong> â†’ <strong>Pull Request Comments</strong>.</li>\n<li><strong>Tools</strong> â†’ <strong>Options</strong> â†’ <strong>GitHub</strong> â†’ <strong>Copilot</strong> â†’ <strong>Source Control Integration</strong> â†’ <strong>Enable Git preview features</strong>.</li>\n</ul>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Use-Copilot-to-review-commit/10575248?q=code+review\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em> <em>And <a href=\"https://aka.ms/LocalCodeReview\" data-linktype=\"external\">take this survey</a> to help make the feature even better.</em></p>\n</blockquote>\n<div>\n<p> Note</p>\n<p>This feature must be enabled under <strong>Tools â†’ Manage Preview Features</strong></p>\n</div>\n<br>\n</details>\n<details>\n<summary><strong title=\"Reference your commits and changes in Copilot chat.\">Git context in Copilot Chat</strong></summary>\n<blockquote>\n<p><em>Reference your commits and changes in Copilot chat.</em></p>\n<p>Copilot Chat now supports referencing your commits and changes in the Git Changes window. You can ask Copilot to summarize your changes, explain a specific commit, and more!</p>\n<h5 id=\"reference-your-changes\">Reference your changes</h5>\n<p><code>#changes</code> looks at your uncommitted changes. For example, you can ask Copilot to remind you what you've done so far by referencing your <code>#changes</code>.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/git-context-chat-changes.png\" alt=\"Chat input field with prompt\" data-linktype=\"relative-path\"></p>\n<h5 id=\"reference-your-commits\">Reference your commits</h5>\n<p>When you start typing <code>#commit:</code>, Copilot will show a list of the most recent commits for you to select from. If there's an older commit you want to reference, you can also reference its specific commit ID.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/git-context-chat-commits.png\" alt=\"Typing #commit displays a dropdown of recent commits\" data-linktype=\"relative-path\"></p>\n<p>Then ask the chat to use the commit for tasks like <em>write unit tests to cover changes in this commit</em> or <em>find potential issues in this commit</em>.</p>\n<h5 id=\"try-it-out\">Try it out</h5>\n<p>Ensure the following feature flag is turned on to use these references: <strong>Tools</strong> â†’ <strong>Options</strong> â†’ <strong>GitHub</strong> â†’ <strong>Copilot</strong> â†’ <strong>Source Control Integration</strong> â†’ <strong>Enable Git preview features</strong>.\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"The Git Repository window now provides a filter at its toolbar to show only outgoing / incoming commits.\">View Outgoing / Incoming Commits <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>The Git Repository window now provides a filter at its toolbar to show only outgoing / incoming commits.</em></p>\n<p>The <strong>Git Repository window</strong> is your go-to place to understand your Git history. As you work on a local branch, it may get out of sync with your remote, either because you created new commits (outgoing) or there are new commits to pull (incoming).</p>\n<p>With the new outgoing/incoming filter available in the toolbar, you can instantly spot these unsynced commits. Your commits, their commits â€“ scan them with ease and stay perfectly in sync!</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/filter-outgoing-incoming-commits.png\" alt=\"Show outgoing/incoming only toolbar button\" data-linktype=\"relative-path\"></p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/The-Git-View-Branch-Outgoing-Commits-sec/10720545\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Keep the Git Repository window open between restarts with this new setting.\">Restore the Git repository window <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Keep the Git Repository window open between restarts with this new setting.</em></p>\n<p>As your dedicated environment for branch operations, the <strong>Git Repository window</strong> is likely at the core of your day-to-day development. If you find yourself frequently reopening it with every Visual Studio session, this update is designed to save you time and effort.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/restore-git-repository-window-thumbnail.png\" alt=\"Git Repository window branch list.\" data-linktype=\"relative-path\"></p>\n<p>We've added a new setting to <strong>Git &gt; Settings</strong> that automatically restores the Git Repository window when restarting Visual Studio. Additionally, the window will be included in your saved window layouts, enhancing your customization options.</p>\n<p>By default, this feature is off to keep things running smoothly for those who don't need it. But if you like the convenience, this setting is perfect for you.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/restore-git-repository-window-setting.png\" alt=\"Git Settings page with the restore Git Repository window checkbox.\" data-linktype=\"relative-path\"></p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Git-Repository-window-is-not-restored-in/1255797\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Allow users to customize the initial default branch when a new git repository is created.\">Default branch name <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Allow users to customize the initial default branch when a new git repository is created.</em></p>\n<p>You can now set the default branch name for new Git repositories directly through Visual Studio. This new setting integrates smoothly with your Git configuration, making it easier to tailor your workflow to your preferences.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/default-branch-name-thumbnail.png\" alt=\"Git changes window after a new repository was created with main branch\" data-linktype=\"relative-path\"></p>\n<p>Simply navigate to <strong>Git &gt; Settings</strong>, and the next time you create a repository, you will see your custom branch name in action.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/default-branch-name-setting.png\" alt=\"Git Settings page with the Default branch name text box\" data-linktype=\"relative-path\"></p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Git-in-Visual-Studio-2019:-Options-Shoul/1334747\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"ide\">IDE</h3></div>\n<details>\n<summary><strong title=\"Agents Toolkit 17.14 GA June release updates.\">Microsoft 365 Agents Toolkit - June</strong></summary>\n<blockquote>\n<p><em>Agents Toolkit 17.14 GA June release updates.</em></p>\n<p>The June release contains several fixes for 17.14 GA release:</p>\n<ul>\n<li>Enable Custom Engine Agent launch and preview in Microsoft 365 Copilot.</li>\n</ul>\n<p>There is a Custom Engine Agent template available in our toolkit which is called Weather Agent. We have updated this template to enable it to be launched and previewed in the Microsoft 365 Copilot chat. To try out, simply select the Copilot launch profile when you debug.</p>\n<ul>\n<li><p>Fixed an error pop up when debug failed with installation of Microsoft 365 Agents playground. Now toolkit will pop up clear message and instructions on how to fix the issue.</p>\n</li>\n<li><p>Templates upgrade <a href=\"https://developer.microsoft.com/json-schemas/teams/v1.22/MicrosoftTeams.schema.json\" data-linktype=\"external\">App manifest dependency to v1.21</a>.</p>\n</li>\n<li><p>Several bugs in templates README file introduced by our new branding changes were fixed.</p>\n</li>\n<li><p>Updated the toolkit icon in extension manager.</p>\n</li>\n<li><p>Fixed the issue when launching Agents Playground, the required channel ID value only allows msteams and emulator. Now it allows other values like webchat.\n<br></p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"NuGet now provides context when asking you to provide credentials.\">Enhanced NuGet Authentication</strong></summary>\n<blockquote>\n<p><em>NuGet now provides context when asking you to provide credentials.</em></p>\n<p>We've improved the NuGet authentication process. If we detect any potential authentication issues, you'll now see a new authentication dialog that provides context about the feed and the specific account needs.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/nugetauthdialog.png\" alt=\"NuGet authentication dialog\" data-linktype=\"relative-path\"></p>\n<p>This update enhances the reauthentication process for multi-factor authentication (MFA) scenarios, resolves issues with consecutive authentication prompts, and ensures a smoother overall experience when managing private NuGet feeds.\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Teams Toolkit 17.14 GA updates.\">Microsoft 365 Agents Toolkit</strong></summary>\n<blockquote>\n<p><em>Teams Toolkit 17.14 GA updates.</em></p>\n<p>We are excited to announce that our product, previously known as Teams Toolkit, is being renamed to Microsoft 365 Agents Toolkit. This change reflects our expanded focus and commitment to support a broader range of platforms and project types within the Microsoft 365 ecosystem.</p>\n<p>As we continue to enhance our product, we are shifting our focus from solely supporting Teams development to empowering developers to create Microsoft 365 Copilot agents and other applications across the Microsoft 365 platform. These platforms include Microsoft 365 Copilot, Microsoft Teams, Office family and Outlook. This expansion in scope allows us to better serve our users by providing comprehensive tools, templates and resources for developing a wide variety of Microsoft 365 solutions.</p>\n<p>The new name, Microsoft 365 Agents Toolkit, better represents the diverse functionalities and capabilities of our product. We believe this change will help our users more easily identify the full range of development opportunities available within the Microsoft 365 environment.</p>\n<p>Thank you for your continued support as we evolve to meet the growing needs of our developer community.</p>\n<h5 id=\"create-declarative-agent\">Create declarative agent</h5>\n<p>We're excited to announce that in this release we added project templates for building Declarative Agents for Microsoft 365 Copilot.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/atk_da_create.png\" alt=\"create DA project\" data-linktype=\"relative-path\"></p>\n<p>You can create a Declarative Agent with or without an action. You can choose to define new APIs or utilize existing ones to perform tasks or retrieve data.</p>\n<p>Use Microsoft 365 Agents Toolkit to debug and preview your Declarative Agents in Microsoft Copilot.</p>\n<h5 id=\"enable-smooth-one-click-debug\">Enable smooth one-click debug</h5>\n<p>In previous versions of Teams Toolkit, which is now called Microsoft 365 Agents Toolkit, when users debugged any solution generated, you needed to use the command <strong>Prepare Teams app dependency</strong> before debugging the project. This command triggered the toolkit to help developers create essential resources for debugging, such as registering or updating the Teams app.</p>\n<p>To enhance the debugging experience and make it more intuitive for Visual Studio users, we have removed this step and enabled one-click debugging experience. Now, you can directly click the debug button without any preparation steps. However, if you have made edits to your app manifest between two debug events and need to update your app, there remains an option to do that.\nWe offer two debug profiles:</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/atk_debug_profiles.png\" alt=\"debug profiles\" data-linktype=\"relative-path\"></p>\n<ul>\n<li><strong>Debug with updating app</strong>: Select the default profile <code>[Your Target Launch Platform] (browser)</code> if you have made edits to your app to ensure the updates are applied.</li>\n<li><strong>Debug without updating app</strong>: Choose the second profile <code>[Your Target Launch Platform] (browser) (skip update app) </code> to skip updating the app resources, making debugging lighter and quicker.</li>\n</ul>\n<h5 id=\"upgrade-to-net-9\">Upgrade to .NET 9</h5>\n<p>Additionally, in this release, we have refreshed all project templates to support .NET 9.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/atk_net9.png\" alt=\".net9 support\" data-linktype=\"relative-path\"></p>\n<p><strong>Happy coding!</strong><br>\n<em>The Microsoft 365 Agents Toolkit Team</em>\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Changing themes will now preserve your font and font size preferences.\">Preserve font preferences across themes <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Changing themes will now preserve your font and font size preferences.</em></p>\n<p>We understand that the fonts developers select when coding is a personal choice, influenced by preferences for readability, accessibility, or aesthetics. Visual Studio themes primarily focus on presentation colors and are independent of your preferred fonts.</p>\n<p>With this update, we've introduced functionality to retain your font face and size choices when switching themes. You can now set your font preferences once and switch themes in Visual Studio without needing to reconfigure your font settings every time. Note that the colors of your fonts remain linked to the theme, as that is the purpose of themes, but your font selections will be preserved.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/fontattributespreserveacrossthemes.png\" alt=\"The Visual Studio editor showing the same piece of code using the same font, but half of the code is in dark theme and half in light.\" data-linktype=\"relative-path\"></p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Environment-font-and-font-size-is-associ/10143502?q=font+theme&amp;fTime=allTime\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"desktop\">Desktop</h3></div>\n<details>\n<summary><strong title=\"Discover your favorite Windows Forms (WinForms) controls present in the Explicit Assembly References automatically added to the Toolbox for .NET Framework projects using the WinForms out-of-process designer.\">Toolbox support for 32-bit assemblies</strong></summary>\n<blockquote>\n<p><em>Discover your favorite Windows Forms (WinForms) controls present in the Explicit Assembly References automatically added to the Toolbox for .NET Framework projects using the WinForms out-of-process designer.</em></p>\n<p>WinForms out-of-process Designer for .NET Framework projects now supports an enhanced experience by automatically discovering and displaying controls present in standalone assembly references, also known as <em>Explicit Assembly References</em>.</p>\n<p>This feature greatly enriches the design time experience for .NET Framework projects referencing legacy 32-bit assemblies. Users can leverage improved tool configurations tailored for better integration with modern development workflows and enhanced productivity. For more details, please read our <a href=\"https://aka.ms/winforms/designer/explicitassemblyreferences\" data-linktype=\"external\">blog post</a>.\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Live Preview, Hot Reload, and other UI tools are now available at design time.\">Update your UI, live at design time <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Live Preview, Hot Reload, and other UI tools are now available at design time.</em></p>\n<p>Live Preview is now available at design time, allowing you to see changes in your app UI in real-time. You can also use Hot Reload and other live UI tools in this way, ensuring a seamless workflow.</p>\n<p>These tools can be used even when detached from the debugger, allowing for uninterrupted experimentation and refinement of your designs.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/live-preview.gif\" alt=\"Live Preview Demo\" data-linktype=\"relative-path\"></p>\n<p>Click on the new <strong>Live Preview</strong> indicator to access Live Preview at design time from any XAML file:</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/live-preview.png\" alt=\"Live Preview Screenshot\" data-linktype=\"relative-path\"></p>\n<p>Whether you're working on a new .NET MAUI app or refining an existing WPF app, these enhancements will help you deliver high-quality applications faster and with greater confidence.</p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Updates-to-Live-Preview-Hot-Reload-and/10846679\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Visual Studio now includes an updated UWP MSTest project template targeting .NET 9 and Native AOT.\">New UWP .NET 9 MSTest project template <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>Visual Studio now includes an updated UWP MSTest project template targeting .NET 9 and Native AOT.</em></p>\n<p>Visual Studio now includes a new UWP MSTest project template targeting .NET 9 and Native AOT. We worked closely with the MSTest team to add all necessary support for UWP .NET 9 projects to the MSTest libraries, infrastructure, and the Visual Studio test host. This enables UWP test projects to target .NET 9 and leverage all the modern .NET SDK and MSTest tooling while still running in a UWP context as you'd expect.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/uwp-net9-mstest-template.png\" alt=\"UWP .NET 9 MSTest project templates\" data-linktype=\"relative-path\"></p>\n<p>The previous UWP MSTest project template using .NET Native will still be available. However, we recommend using the new project templates targeting .NET 9 and Native AOT going forward. As in Visual Studio 17.13, we have adjusted the ordering of all UWP templates to prioritize the new .NET 9 project templates in the search results.</p>\n<p>ðŸ“£ <em>See <a href=\"https://github.com/microsoft/microsoft-ui-xaml/discussions/9983\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"extensibility\">Extensibility</h3></div>\n<details>\n<summary><strong title=\"The installer can now handle the installation of extension packs.\">Install extension packs</strong></summary>\n<blockquote>\n<p><em>The installer can now handle the installation of extension packs.</em></p>\n<p>The installer now supports Extension Packs, which are bundles of multiple extensions referenced from a single extension.</p>\n<p>To use Extension Packs in the Installer, first specify the desired extensions in a .vsconfig file. Then, use the Visual Studio Installer's Import Configuration feature to import the .vsconfig file containing your extension details.</p>\n<p>For more information on creating or generating .vsconfig files, refer to the <a href=\"https://learn.microsoft.com/en-us/visualstudio/install/import-export-installation-configurations#extensions\" data-linktype=\"absolute-path\">installation configurations documentation</a>.</p>\n<p>After importing the .vsconfig file, you'll be directed to the modify screen where extensions will be grouped under their own heading in the installation summary pane. Here, you can select or deselect entire Extension Packs or individual extensions within any Packs.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/installer-extensions.png\" alt=\"Extension installation via the Visual Studio Installer\" data-linktype=\"relative-path\">\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"VSIX projects with one or more project references now use intelligent incremental builds, drastically improving F5 scenarios and developer productivity.\">Faster VSIX build times</strong></summary>\n<blockquote>\n<p><em>VSIX projects with one or more project references now use intelligent incremental builds, drastically improving F5 scenarios and developer productivity.</em></p>\n<p>If you're developing Visual Studio extensions with multiple projects, you'll love this performance enhancement! VSIX projects with one or more project references will now only build projects that actually need rebuilding, making your development workflow significantly faster.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/vsix-build-perf.png\" alt=\"Vsix Build Perf\" data-linktype=\"relative-path\"></p>\n<h5 id=\"how-it-works\">How it works</h5>\n<p>The Fast Up-to-Date Check system has been improved to be smarter about determining which projects in your solution need rebuilding:</p>\n<ul>\n<li>If you modify Project A which depends on Projects B and C, only Project A will be rebuilt</li>\n<li>If you modify Project B, only Projects A and B will be rebuilt</li>\n<li>This intelligence extends throughout your entire project dependency tree</li>\n</ul>\n<h5 id=\"real-world-impact\">Real-world impact</h5>\n<p>The performance improvements are substantial in real-world scenarios. For example, the GitHub Copilot extension that ships with Visual Studio (with approximately 30 projects) saw build time improvements of over 50% for incremental changes - reducing build times from around 60 seconds to just 24 seconds!</p>\n<p>This enhancement is particularly beneficial for:</p>\n<ul>\n<li>Large VSIX projects with multiple dependencies</li>\n<li>Rapid iteration development workflows</li>\n<li>Frequent F5 debugging sessions</li>\n</ul>\n<p>Note that if your solution contains only a single project, you won't see any performance benefits from this enhancement.</p>\n<blockquote>\n<p>Note: This only applies to SDK-Style VSIX projects.</p>\n</blockquote>\n<p>Your extension development just got a whole lot faster - happy coding!\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"There are several new improvements to the Extension Manager in Visual Studio that will make it easier to manage your extensions.\">Extension Manager updates <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>There are several new improvements to the Extension Manager in Visual Studio that will make it easier to manage your extensions.</em></p>\n<p>We're excited to introduce a set of powerful new features in Visual Studio that streamline your workflow and improve the extension management experience. These updates ensure that you stay up to date effortlessly while giving you more control over how and when updates are applied.</p>\n<h5 id=\"whats-new\">What's New?</h5>\n<p><strong>Seamless auto updates</strong></p>\n<p>Visual Studio will now automatically trigger updates when you open the application, ensuring you always have the latest features and fixes without manual intervention.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/extman-autoupdates.png\" alt=\"Extman Autoupdates\" data-linktype=\"relative-path\"></p>\n<p><strong>Restart gold bar for applied updates</strong></p>\n<p>When updates are applied, a gold bar notification will appear, prompting you to restart Visual Studio for the changes to take effect.</p>\n<p><strong>Auto update settings in extension page</strong></p>\n<p>We've made auto update settings more accessible by integrating them directly into the extension page, giving you quick access to configuration options.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/extman-updatesettings.png\" alt=\"Extman Updatesettings\" data-linktype=\"relative-path\"></p>\n<p><strong>Filter by pending changes</strong></p>\n<p>A new <strong>Pending</strong> category now highlights pending changes, keeping you informed about updates and modifications that require attention.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/extman-pending.png\" alt=\"Extman Pending\" data-linktype=\"relative-path\"></p>\n<p><strong>Auto update settings</strong></p>\n<p>In addition to the extension page, auto update settings are now available under <strong>Tools â†’ Options â†’ Environment â†’ Extensions</strong>, allowing for a more intuitive settings management experience.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/extman-options.png\" alt=\"Extman Options\" data-linktype=\"relative-path\"></p>\n<p><strong>Simplified settings experience</strong></p>\n<p>We've streamlined the settings UI, making it easier to configure auto updates and other related preferences with fewer clicks and clearer options.</p>\n<p><strong>Excluded extensions list</strong></p>\n<p>Visual Studio now features an Excluded extensions list that auto-populates, helping you manage extensions that should not be updated automatically. This is particularly useful for mission-critical extensions where you prefer to control version updates manually.</p>\n<p>These enhancements are designed to improve usability, reduce update friction, and give you greater control over your development environment while ensuring you benefit from the latest improvements.</p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Opt-_some_-extensions-in-to-auto-update/1236000\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"data\">Data</h3></div>\n<details>\n<summary><strong title=\"You can now use the SDK-style project file format in your SQL Server Data Tools projects with enhanced SQL debugging and schema comparison capabilities.\">Use SDK-style SQL projects in SSDT <sup title=\"User requested feature\">ðŸ“£</sup></strong></summary>\n<blockquote>\n<p><em>You can now use the SDK-style project file format in your SQL Server Data Tools projects with enhanced SQL debugging and schema comparison capabilities.</em></p>\n<p>The update in Visual Studio 17.14 introduces new item templates and .dacpac database references to SDK-style SQL Server Data Tools (preview). SDK-style SSDT SQL projects are based on the Microsoft.Build.Sql SDK, which provides cross-platform support and improved CI/CD capabilities for SQL Server Data Tools (SSDT) projects.</p>\n<p>With less verbose project files and database references to NuGet packages, teams can collaborate more efficiently on large databases within a single project or compile multiple sets of objects from several projects. Database deployments from a Microsoft.Build.Sql project can be automated in both Windows and Linux environments using the Microsoft.SqlPackage dotnet tool to publish the build artifact (.dacpac) from the SQL project. Learn more about <a href=\"https://aka.ms/sqlprojects\" data-linktype=\"external\">SDK-style SQL projects and DevOps for SQL</a>.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/ssdt_sdk_preview_database_reference.png\" alt=\"Adding a database reference in SDK-style SQL Server Data Tools\" data-linktype=\"relative-path\"></p>\n<p>In 17.14, <a href=\"https://learn.microsoft.com/en-us/sql/tools/sql-database-projects/concepts/database-references?pivots=sq1-visual-studio-sdk\" data-linktype=\"absolute-path\">database references</a> have been expanded to support project and .dacpac artifact references. Support for database references as package references will be available in a future release. A recent update to the <a href=\"https://github.com/microsoft/slngen\" data-linktype=\"external\">slngen solution file generator</a> also added support for Microsoft.Build.Sql projects, enabling the management of large solutions programmatically.</p>\n<p>To use SDK-style SQL projects in your solution, make sure to install the latest SSDT preview component in the Visual Studio installer.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/ssdt_preview_installer.png\" alt=\"Installer enable preview SSDT feature\" data-linktype=\"relative-path\"></p>\n<p>ðŸ“£ <em>See <a href=\"https://developercommunity.visualstudio.com/t/Use-new-project-file-format-for-sqlproj/480461\" data-linktype=\"external\">feature ticket</a> to share your feedback and continue the conversation.</em>\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"net\">.NET</h3></div>\n<details>\n<summary><strong title=\"GitHub Copilot app modernization now built into Visual Studio.\">App modernization</strong></summary>\n<blockquote>\n<p><em>GitHub Copilot app modernization now built into Visual Studio.</em></p>\n<p>The <a href=\"https://learn.microsoft.com/en-us/dotnet/core/porting/github-copilot-app-modernization-overview\" data-linktype=\"absolute-path\">GitHub Copilot app modernization</a> agent is an AI-powered tool in Visual Studio that helps you upgrade .NET applications to newer versions and migrate them to Azure.</p>\n<h5 id=\"how-to-get-started\">How to get started</h5>\n<ol>\n<li>Open your .NET project or solution in Visual Studio.</li>\n<li>Launch the modernization agent using one of the following methods:\n<ul>\n<li>Right-click the solution or project in Solution Explorer and select Modernize.<br>\n<strong>-&nbsp;or -</strong></li>\n<li>Open the <strong>Copilot Chat</strong> window and type <code>@modernize</code> followed by your upgrade request.</li>\n</ul>\n</li>\n<li>Let the <code>@modernize</code> agent know what you'd like to upgrade or migrate.</li>\n</ol>\n<p>With the app modernization agent, it's easier than ever to keep your .NET apps up to date and take advantage of the latest Azure features. Give it a try and see how much time you can save!\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"c\">C++</h3></div>\n<details>\n<summary><strong title=\"Advanced support for debugging Unreal Engine Blueprints.\">Unreal Engine Blueprint Debugger</strong></summary>\n<blockquote>\n<p><em>Advanced support for debugging Unreal Engine Blueprints.</em></p>\n<p>We are happy to announce enhanced debugging support for Unreal Engine projects. Visual Studio will now display Blueprint information directly in the call stack and local variables windows.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/ue-blueprint-debugger.png\" alt=\"Unreal Engine Blueprint Debugger\" data-linktype=\"relative-path\"></p>\n<p>This update allows you to debug Blueprint and C++ code together in a single session, making it easier to trace interactions and identify issues across both scripting layers. In addition, you can now set breakpoints in Blueprint code, providing a more integrated debugging experience.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/ue-blueprint-debugger-locals.png\" alt=\"Unreal Engine Blueprint Debugger Locals\" data-linktype=\"relative-path\">\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Added support for CMake modules in IntelliSense Quick Info and completions.\">Hover tooltips for CMake modules</strong></summary>\n<blockquote>\n<p><em>Added support for CMake modules in IntelliSense Quick Info and completions.</em></p>\n<p>We are thrilled to announce that we have added support for IntelliSense-based completions and quick info for CMake modules in Visual Studio. Now, you can view all available CMake modules and learn more about them directly from the Visual Studio editor, making your development process smoother and more efficient.</p>\n<h5 id=\"quick-info\">Quick Info</h5>\n<p>When you hover over a referenced CMake module, IntelliSense provides detailed information about the selected module, helping you understand its usage and functionality at a glance.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/cmake-module-quick-info.png\" alt=\"CMake information in the Quick Info\" data-linktype=\"relative-path\"></p>\n<h5 id=\"completion\">Completion</h5>\n<p>When you start typing a CMake module in your <code>CMakeLists.txt</code> or other CMake script files, IntelliSense will provide a list of available modules to choose from.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/cmake-module-completion.png\" alt=\"CMake module completion\" data-linktype=\"relative-path\">\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Full debuggability for your optimized C++ code without compromising on performance.\">C++ Dynamic Debugging</strong></summary>\n<blockquote>\n<p><em>Full debuggability for your optimized C++ code without compromising on performance.</em></p>\n<p>Debugging optimized code is now easier than ever. By activating C++ Dynamic Debugging, you can debug your optimized code as if it were unoptimized. You can view all your local variables, step in anywhere, and set full-fidelity breakpoints on your optimized binaries. For more details, please read our <a href=\"https://aka.ms/dynamicdebugging\" data-linktype=\"external\">blog post</a>.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/dynamicdebugging.png\" alt=\"C++ Dynamic Debugging\" data-linktype=\"relative-path\">\n<br></p>\n</blockquote>\n</details>\n<details>\n<summary><strong title=\"Template IntelliSense now automatically populates template arguments by using Go To Definition (F12).\">Populate template IntelliSense</strong></summary>\n<blockquote>\n<p><em>Template IntelliSense now automatically populates template arguments by using Go To Definition (F12).</em></p>\n<p>You can now automatically populate template arguments in the template bar, which displays and allows editing of template parameters, when using <strong>Go To Definition</strong> or <kbd>F12</kbd>.</p>\n<p>For example, pressing F12 on <code>vector</code> will now jump to <code>vector</code> with the template bar automatically populated, allowing developers to quickly inspect and modify template parameters.</p>\n<p>In the example below, using <strong>Go To Definition</strong> or pressing <kbd>F12</kbd> will populate both the type and allocator in the template bar.</p>\n<p><img src=\"https://learn.microsoft.com/en-us/visualstudio/releases/2022/media/17.14/template-intellisense-gtd.gif\" alt=\"Auto Populate Template IntelliSense\" data-linktype=\"relative-path\">\n<br></p>\n</blockquote>\n</details>\n<div data-heading-level=\"h3\"><h3 id=\"top-user-reported-bug-fixes\">Top user-reported bug fixes</h3></div>\n<ul>\n<li><a href=\"https://developercommunity.visualstudio.com/t/Error-with-String::Format-in-C-CLR-Cla/10788352\" data-linktype=\"external\">Error with String::Format in C++ CLR Class Library (.NET) project</a></li>\n<li><a href=\"https://developercommunity.visualstudio.com/t/False-positive-lifetime-code-analysis-wa/10732367\" data-linktype=\"external\">False positive lifetime code analysis warning C26847: Don't return an invalid pointer</a></li>\n<li><a href=\"https://developercommunity.visualstudio.com/t/Regression-in-17120:-Substitution-Fail/10792624\" data-linktype=\"external\">Regression in 17.12.0: Substitution Failure Is An Error C3699 when compiling with /CLR</a></li>\n<li><a href=\"https://developercommunity.visualstudio.com/t/Sanitizer-Coverage-Produces-Bad-Codegen/10849385\" data-linktype=\"external\">Sanitizer Coverage Produces Bad Codegen</a></li>\n<li><a href=\"https://developercommunity.visualstudio.com/t/Compilation-error-in-lambda-expressions-/10825673\" data-linktype=\"external\">Compilation error in lambda expressions in hierarchies with virtual inheritance</a></li>\n<li><a href=\"https://developercommunity.visualstudio.com/t/VS2022-Pro---Installer-fails-update-to-1/10788808\" data-linktype=\"external\">Installer fails update to 17.12.0 with powershell script execution error</a></li>\n<li><a href=\"https://developercommunity.visualstudio.com/t/Solution-explorer-exception-when-changin/10703147\" data-linktype=\"external\">Solution explorer exception when changing solution</a></li>\n</ul>\n<p>ðŸ“£ See the full list of all the user-reported <a href=\"https://developercommunity.visualstudio.com/fixes\" data-linktype=\"external\">bug fixes</a> that made it into this release.</p>\n</section>\n\n\n\n\n\n</div><p>From our entire team, thank you for choosing Visual Studio! For the latest updates, resources, and news, check out the <a href=\"https://aka.ms/vshub\" data-linktype=\"external\">Visual Studio Hub</a> and stay in touch.</p></div>"
    }
  ]
}
